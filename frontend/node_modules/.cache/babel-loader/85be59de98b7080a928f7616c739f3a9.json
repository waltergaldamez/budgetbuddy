{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/brenden/Documents/budgetbuddy/src/components/Budgets.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nfunction Budgets() {\n  _s();\n\n  var budgetName;\n  var budgetGoal; // var budgetProgress;\n\n  const [message, setMessage] = useState('');\n  const [searchResults, setResults] = useState('');\n\n  const addBudget = async (event) => {\n    event.preventDefault();\n    alert('addBudget() ' + budgetName.value + ' ' + budgetGoal.value);\n  };\n\n  const searchBudget = async (event) => {\n    event.preventDefault();\n    alert('searchBudget()' + budgetName.value + ' ' + budgetGoal.value);\n  };\n  /*-----------------START-----------*/\n  // Get stuff out of persistant memory such as username \n  //     var _ud = localStorage.getItem('user_data');\n  //     var ud = JSON.parse(_ud);\n  //     var userId = ud.id;\n  //     var firstName = ud.firstName;\n  //     var lastName = ud.lastName;\n  //     const addBudget = async event => \n  //     {\n  // \t    event.preventDefault();\n  //         // Getting stuff out of UI\n  //         // Need to change card: card.value \n  //         // var obj = {userId:userId,card:card.value};\n  //         // var js = JSON.stringify(obj);\n  //         try\n  //         {\n  //             // Call to API\n  //             const response = await fetch('http://localhost:5000/api/addbudget',\n  //             {method:'POST',body:js,headers:{'Content-Type': 'application/json'}});\n  //             // Parsing response\n  //             var txt = await response.text();\n  //             var res = JSON.parse(txt);\n  //             if( res.error.length > 0 )\n  //             {\n  //                 setMessage( \"API Error:\" + res.error );\n  //             }\n  //             else\n  //             {\n  //                 setMessage('Budget has been added');\n  //             }\n  //         }\n  //         catch(e)\n  //         {\n  //             setMessage(e.toString());\n  //         }\n  // \t};\n  //     const searchBudget = async event => \n  //     {\n  //         event.preventDefault();\n  //         // Get data from UI\n  //         var obj = {userId:userId,search:search.value};\n  //         var js = JSON.stringify(obj);\n  //         try\n  //         {\n  //             // API call\n  //             const response = await fetch('http://localhost:5000/api/searchbudget',\n  //             {method:'POST',body:js,headers:{'Content-Type': 'application/json'}});\n  //             // Parsing the data\n  //             var txt = await response.text();\n  //             var res = JSON.parse(txt);\n  //             var _results = res.results;\n  //             var resultText = '';\n  //             for( var i=0; i<_results.length; i++ )\n  //             {\n  //                 resultText += _results[i];\n  //                 if( i < _results.length - 1 )\n  //                 {\n  //                     resultText += ', ';\n  //                 }\n  //             }\n  //             setResults('Budget(s) have been retrieved');\n  //             setCardList(resultText);\n  //         }\n  //         catch(e)\n  //         {\n  //             alert(e.toString());\n  //             setResults(e.toString());\n  //         }\n  //     };\n\n  /*-------------END-----------------*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"accessUIDiv\",\n    children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 8\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"searchText\",\n      placeholder: \"Budget To Search For\",\n      ref: c => budgetName = c\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 8\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      id: \"searchBudgetButton\",\n      class: \"buttons\",\n      onClick: searchBudget,\n      children: \" Search Budget \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 59\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"budgetSearchResult\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"budgetText\",\n      placeholder: \"Budget To Add\",\n      ref: c => budgetGoal = c\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      id: \"addBudgetButton\",\n      class: \"buttons\",\n      onClick: addBudget,\n      children: \" Add Budget \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 52\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"BudgetAddResult\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 8\n    }, this), \"\\xA0\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Budgets, \"vWXoNUyVwRk+bOhPqWTotXuMjek=\");\n\n_c = Budgets;\nexport default Budgets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Budgets\");","map":{"version":3,"sources":["/home/brenden/Documents/budgetbuddy/src/components/Budgets.js"],"names":["React","useState","Budgets","budgetName","budgetGoal","message","setMessage","searchResults","setResults","addBudget","event","preventDefault","alert","value","searchBudget","c"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,OAAT,GACA;AAAA;;AACI,MAAIC,UAAJ;AACA,MAAIC,UAAJ,CAFJ,CAGI;;AAEA,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBL,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACM,aAAD,EAAeC,UAAf,IAA6BP,QAAQ,CAAC,EAAD,CAA3C;;AAEA,QAAMQ,SAAS,GAAG,OAAMC,KAAN,KAClB;AACCA,IAAAA,KAAK,CAACC,cAAN;AAEAC,IAAAA,KAAK,CAAC,iBAAiBT,UAAU,CAACU,KAA5B,GAAoC,GAApC,GAA0CT,UAAU,CAACS,KAAtD,CAAL;AAEA,GAND;;AAQA,QAAMC,YAAY,GAAG,OAAMJ,KAAN,KACrB;AACIA,IAAAA,KAAK,CAACC,cAAN;AAEHC,IAAAA,KAAK,CAAC,mBAAmBT,UAAU,CAACU,KAA9B,GAAsC,GAAtC,GAA4CT,UAAU,CAACS,KAAxD,CAAL;AACA,GALD;AAOA;AACA;AACJ;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;;;AAEA,sBACE;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA,4DACC;AAAA;AAAA;AAAA;AAAA,YADD,+CAEC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,YAAtB;AAAmC,MAAA,WAAW,EAAC,sBAA/C;AAAsE,MAAA,GAAG,EAAGE,CAAD,IAAOZ,UAAU,GAAGY;AAA/F;AAAA;AAAA;AAAA;AAAA,YAFD,+CAGC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,EAAE,EAAC,oBAAzB;AAA8C,MAAA,KAAK,EAAC,SAApD;AACI,MAAA,OAAO,EAAED,YADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,eAIoD;AAAA;AAAA;AAAA;AAAA,YAJpD,eAKC;AAAM,MAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,YALD,eAOC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,YAAtB;AAAmC,MAAA,WAAW,EAAC,eAA/C;AAA+D,MAAA,GAAG,EAAGC,CAAD,IAAOX,UAAU,GAAGW;AAAxF;AAAA;AAAA;AAAA;AAAA,YAPD,eAQC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,EAAE,EAAC,iBAAzB;AAA2C,MAAA,KAAK,EAAC,SAAjD;AACG,MAAA,OAAO,EAAEN,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARD,eAS6C;AAAA;AAAA;AAAA;AAAA,YAT7C,eAUC;AAAM,MAAA,EAAE,EAAC,iBAAT;AAAA,gBAA4BJ;AAA5B;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcH;;GA1HQH,O;;KAAAA,O;AA4HT,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction Budgets()\n{\n    var budgetName;\n    var budgetGoal;\n    // var budgetProgress;\n\n    const [message,setMessage] = useState('');\n    const [searchResults,setResults] = useState('');\n\n    const addBudget = async event => \n    {\n\t    event.preventDefault();\n\n\t    alert('addBudget() ' + budgetName.value + ' ' + budgetGoal.value);\n\n    };\n\n    const searchBudget = async event => \n    {\n        event.preventDefault();\n        \n\t    alert('searchBudget()' + budgetName.value + ' ' + budgetGoal.value);\n    };\n\n    /*-----------------START-----------*/\n    // Get stuff out of persistant memory such as username \n//     var _ud = localStorage.getItem('user_data');\n//     var ud = JSON.parse(_ud);\n//     var userId = ud.id;\n//     var firstName = ud.firstName;\n//     var lastName = ud.lastName;\n\t\n//     const addBudget = async event => \n//     {\n// \t    event.preventDefault();\n\n//         // Getting stuff out of UI\n//         // Need to change card: card.value \n\n//         // var obj = {userId:userId,card:card.value};\n//         // var js = JSON.stringify(obj);\n\n//         try\n//         {\n//             // Call to API\n//             const response = await fetch('http://localhost:5000/api/addbudget',\n//             {method:'POST',body:js,headers:{'Content-Type': 'application/json'}});\n\n//             // Parsing response\n//             var txt = await response.text();\n//             var res = JSON.parse(txt);\n\n//             if( res.error.length > 0 )\n//             {\n//                 setMessage( \"API Error:\" + res.error );\n//             }\n//             else\n//             {\n//                 setMessage('Budget has been added');\n//             }\n//         }\n//         catch(e)\n//         {\n//             setMessage(e.toString());\n//         }\n\n// \t};\n\n//     const searchBudget = async event => \n//     {\n//         event.preventDefault();\n    \n//         // Get data from UI\n//         var obj = {userId:userId,search:search.value};\n//         var js = JSON.stringify(obj);\n\n//         try\n//         {\n//             // API call\n//             const response = await fetch('http://localhost:5000/api/searchbudget',\n//             {method:'POST',body:js,headers:{'Content-Type': 'application/json'}});\n\n//             // Parsing the data\n//             var txt = await response.text();\n//             var res = JSON.parse(txt);\n\n//             var _results = res.results;\n//             var resultText = '';\n\n//             for( var i=0; i<_results.length; i++ )\n//             {\n//                 resultText += _results[i];\n//                 if( i < _results.length - 1 )\n//                 {\n//                     resultText += ', ';\n//                 }\n//             }\n//             setResults('Budget(s) have been retrieved');\n//             setCardList(resultText);\n//         }\n//         catch(e)\n//         {\n//             alert(e.toString());\n//             setResults(e.toString());\n//         }\n//     };\n    /*-------------END-----------------*/\n\n    return(\n      <div id=\"accessUIDiv\">\n       <br />\n       <input type=\"text\" id=\"searchText\" placeholder=\"Budget To Search For\" ref={(c) => budgetName = c} />\n       <button type=\"button\" id=\"searchBudgetButton\" class=\"buttons\" \n           onClick={searchBudget}> Search Budget </button><br />\n       <span id=\"budgetSearchResult\"></span>\n        {/* <p id=\"budgetList\">{budgetList}</p><br /><br /> */}\n       <input type=\"text\" id=\"budgetText\" placeholder=\"Budget To Add\" ref={(c) => budgetGoal = c} />\n       <button type=\"button\" id=\"addBudgetButton\" class=\"buttons\" \n          onClick={addBudget}> Add Budget </button><br />\n       <span id=\"BudgetAddResult\">{message}</span>\n     </div>\n    );\n}\n\nexport default Budgets;\n"]},"metadata":{},"sourceType":"module"}